/*
 * Candidates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.smartrecruiters.api.candidates.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartrecruiters.api.candidates.model.CandidateLocation;
import com.smartrecruiters.api.candidates.model.CandidateSource;
import com.smartrecruiters.api.candidates.model.Education;
import com.smartrecruiters.api.candidates.model.Experience;
import com.smartrecruiters.api.candidates.model.WebProfile;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CandidateInput
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-23T14:57:09.146594+01:00[Europe/London]")
public class CandidateInput {
  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("location")
  private CandidateLocation location = null;

  @SerializedName("web")
  private WebProfile web = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("education")
  private List<Education> education = null;

  @SerializedName("experience")
  private List<Experience> experience = null;

  @SerializedName("sourceDetails")
  private CandidateSource sourceDetails = null;

  @SerializedName("internal")
  private Boolean internal = null;

  public CandidateInput firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(required = true, description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public CandidateInput lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(required = true, description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CandidateInput email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(required = true, description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CandidateInput phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @Schema(description = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public CandidateInput location(CandidateLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public CandidateLocation getLocation() {
    return location;
  }

  public void setLocation(CandidateLocation location) {
    this.location = location;
  }

  public CandidateInput web(WebProfile web) {
    this.web = web;
    return this;
  }

   /**
   * Get web
   * @return web
  **/
  @Schema(description = "")
  public WebProfile getWeb() {
    return web;
  }

  public void setWeb(WebProfile web) {
    this.web = web;
  }

  public CandidateInput tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public CandidateInput addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public CandidateInput education(List<Education> education) {
    this.education = education;
    return this;
  }

  public CandidateInput addEducationItem(Education educationItem) {
    if (this.education == null) {
      this.education = new ArrayList<Education>();
    }
    this.education.add(educationItem);
    return this;
  }

   /**
   * Get education
   * @return education
  **/
  @Schema(description = "")
  public List<Education> getEducation() {
    return education;
  }

  public void setEducation(List<Education> education) {
    this.education = education;
  }

  public CandidateInput experience(List<Experience> experience) {
    this.experience = experience;
    return this;
  }

  public CandidateInput addExperienceItem(Experience experienceItem) {
    if (this.experience == null) {
      this.experience = new ArrayList<Experience>();
    }
    this.experience.add(experienceItem);
    return this;
  }

   /**
   * Get experience
   * @return experience
  **/
  @Schema(description = "")
  public List<Experience> getExperience() {
    return experience;
  }

  public void setExperience(List<Experience> experience) {
    this.experience = experience;
  }

  public CandidateInput sourceDetails(CandidateSource sourceDetails) {
    this.sourceDetails = sourceDetails;
    return this;
  }

   /**
   * Get sourceDetails
   * @return sourceDetails
  **/
  @Schema(description = "")
  public CandidateSource getSourceDetails() {
    return sourceDetails;
  }

  public void setSourceDetails(CandidateSource sourceDetails) {
    this.sourceDetails = sourceDetails;
  }

  public CandidateInput internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @Schema(description = "")
  public Boolean isInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandidateInput candidateInput = (CandidateInput) o;
    return Objects.equals(this.firstName, candidateInput.firstName) &&
        Objects.equals(this.lastName, candidateInput.lastName) &&
        Objects.equals(this.email, candidateInput.email) &&
        Objects.equals(this.phoneNumber, candidateInput.phoneNumber) &&
        Objects.equals(this.location, candidateInput.location) &&
        Objects.equals(this.web, candidateInput.web) &&
        Objects.equals(this.tags, candidateInput.tags) &&
        Objects.equals(this.education, candidateInput.education) &&
        Objects.equals(this.experience, candidateInput.experience) &&
        Objects.equals(this.sourceDetails, candidateInput.sourceDetails) &&
        Objects.equals(this.internal, candidateInput.internal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, email, phoneNumber, location, web, tags, education, experience, sourceDetails, internal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandidateInput {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    web: ").append(toIndentedString(web)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    sourceDetails: ").append(toIndentedString(sourceDetails)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
