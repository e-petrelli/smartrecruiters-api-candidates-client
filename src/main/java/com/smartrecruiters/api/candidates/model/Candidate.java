/*
 * Candidates API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.smartrecruiters.api.candidates.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.smartrecruiters.api.candidates.model.CandidateActions;
import com.smartrecruiters.api.candidates.model.CandidateConsent;
import com.smartrecruiters.api.candidates.model.CandidateLocation;
import com.smartrecruiters.api.candidates.model.CandidatePrimaryAssignment;
import com.smartrecruiters.api.candidates.model.CandidateSecondaryAssignments;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * Candidate
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-05-23T14:57:09.146594+01:00[Europe/London]")
public class Candidate {
  @SerializedName("id")
  private String id = null;

  @SerializedName("internal")
  private Boolean internal = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("createdOn")
  private OffsetDateTime createdOn = null;

  @SerializedName("updatedOn")
  private OffsetDateTime updatedOn = null;

  @SerializedName("location")
  private CandidateLocation location = null;

  @SerializedName("averageRating")
  private BigDecimal averageRating = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("consent")
  private CandidateConsent consent = null;

  @SerializedName("primaryAssignment")
  private CandidatePrimaryAssignment primaryAssignment = null;

  @SerializedName("secondaryAssignments")
  private List<CandidateSecondaryAssignments> secondaryAssignments = null;

  @SerializedName("actions")
  private CandidateActions actions = null;

  public Candidate id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Candidate internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @Schema(required = true, description = "")
  public Boolean isInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public Candidate firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @Schema(required = true, description = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Candidate lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(required = true, description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Candidate email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Candidate createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public Candidate updatedOn(OffsetDateTime updatedOn) {
    this.updatedOn = updatedOn;
    return this;
  }

   /**
   * Get updatedOn
   * @return updatedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedOn() {
    return updatedOn;
  }

  public void setUpdatedOn(OffsetDateTime updatedOn) {
    this.updatedOn = updatedOn;
  }

  public Candidate location(CandidateLocation location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public CandidateLocation getLocation() {
    return location;
  }

  public void setLocation(CandidateLocation location) {
    this.location = location;
  }

  public Candidate averageRating(BigDecimal averageRating) {
    this.averageRating = averageRating;
    return this;
  }

   /**
   * Get averageRating
   * @return averageRating
  **/
  @Schema(description = "")
  public BigDecimal getAverageRating() {
    return averageRating;
  }

  public void setAverageRating(BigDecimal averageRating) {
    this.averageRating = averageRating;
  }

  public Candidate tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Candidate addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public Candidate consent(CandidateConsent consent) {
    this.consent = consent;
    return this;
  }

   /**
   * Get consent
   * @return consent
  **/
  @Schema(description = "")
  public CandidateConsent getConsent() {
    return consent;
  }

  public void setConsent(CandidateConsent consent) {
    this.consent = consent;
  }

  public Candidate primaryAssignment(CandidatePrimaryAssignment primaryAssignment) {
    this.primaryAssignment = primaryAssignment;
    return this;
  }

   /**
   * Get primaryAssignment
   * @return primaryAssignment
  **/
  @Schema(description = "")
  public CandidatePrimaryAssignment getPrimaryAssignment() {
    return primaryAssignment;
  }

  public void setPrimaryAssignment(CandidatePrimaryAssignment primaryAssignment) {
    this.primaryAssignment = primaryAssignment;
  }

  public Candidate secondaryAssignments(List<CandidateSecondaryAssignments> secondaryAssignments) {
    this.secondaryAssignments = secondaryAssignments;
    return this;
  }

  public Candidate addSecondaryAssignmentsItem(CandidateSecondaryAssignments secondaryAssignmentsItem) {
    if (this.secondaryAssignments == null) {
      this.secondaryAssignments = new ArrayList<CandidateSecondaryAssignments>();
    }
    this.secondaryAssignments.add(secondaryAssignmentsItem);
    return this;
  }

   /**
   * Get secondaryAssignments
   * @return secondaryAssignments
  **/
  @Schema(description = "")
  public List<CandidateSecondaryAssignments> getSecondaryAssignments() {
    return secondaryAssignments;
  }

  public void setSecondaryAssignments(List<CandidateSecondaryAssignments> secondaryAssignments) {
    this.secondaryAssignments = secondaryAssignments;
  }

  public Candidate actions(CandidateActions actions) {
    this.actions = actions;
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @Schema(required = true, description = "")
  public CandidateActions getActions() {
    return actions;
  }

  public void setActions(CandidateActions actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Candidate candidate = (Candidate) o;
    return Objects.equals(this.id, candidate.id) &&
        Objects.equals(this.internal, candidate.internal) &&
        Objects.equals(this.firstName, candidate.firstName) &&
        Objects.equals(this.lastName, candidate.lastName) &&
        Objects.equals(this.email, candidate.email) &&
        Objects.equals(this.createdOn, candidate.createdOn) &&
        Objects.equals(this.updatedOn, candidate.updatedOn) &&
        Objects.equals(this.location, candidate.location) &&
        Objects.equals(this.averageRating, candidate.averageRating) &&
        Objects.equals(this.tags, candidate.tags) &&
        Objects.equals(this.consent, candidate.consent) &&
        Objects.equals(this.primaryAssignment, candidate.primaryAssignment) &&
        Objects.equals(this.secondaryAssignments, candidate.secondaryAssignments) &&
        Objects.equals(this.actions, candidate.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, internal, firstName, lastName, email, createdOn, updatedOn, location, averageRating, tags, consent, primaryAssignment, secondaryAssignments, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Candidate {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    updatedOn: ").append(toIndentedString(updatedOn)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    averageRating: ").append(toIndentedString(averageRating)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    consent: ").append(toIndentedString(consent)).append("\n");
    sb.append("    primaryAssignment: ").append(toIndentedString(primaryAssignment)).append("\n");
    sb.append("    secondaryAssignments: ").append(toIndentedString(secondaryAssignments)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
